#!/usr/bin/python3.7

"""
Hillary Elrick September 26th, 2018

Defines the importable functions for blasting primers using the locally installed blast+ with the mm10 database
Called when manually entering a primer in JBrowse to determine its location and also via JavaScript in the primer
design results table to check for primer specificity after primers have been generated by the designPrimers script
"""
import sys
import json
import cgi
import os
# import external classes based on relative file location
dir_path = os.path.dirname(os.path.abspath(__file__))
sys.path.append(os.path.join(dir_path,'../..'))
from classes.BlastDB import BlastDB

def main():
	print("Content-type: application/json\n\n")

	try:
		# get the ajax values	
		args = cgi.FieldStorage()
		genome = args.getvalue('genome')
		# array is passed using 'primers' arg
		primers = args.getvalue('primers')
		# single primer passed using 'primer' arg	
		primers = [args.getvalue('primer')]
	except Exception:
		sys.exit("Problem with variables passed to function")
	
	if genome and primers:
		# create blast search object with e-value of 0.01 (do not return identities)
		primerBLAST = BlastDB(genome, primers, '0.01', False)
		hits = primerBLAST.blastSequences()
		for hitDict in hits:	
			hitDict.pop('numHits')
			# encode the hit dictionary into a json object & print it for the ajax request
			print(json.JSONEncoder().encode(hitDict))	
	else:
		sys.exit("Arguments not passed to function")
	
if __name__ == "__main__":
	main()
